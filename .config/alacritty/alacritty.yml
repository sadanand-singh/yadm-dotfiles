# Configuration for Alacritty, the GPU enhanced terminal emulator
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: alacritty
window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels. If both are zero this
  # setting is ignored.
  # dimensions:
  #   columns: 125
  #   lines: 33

  # # Window padding (changes require restart)
  # #
  # # Blank space added around the window in pixels. This padding is not scaled by
  # # DPI and the specified value is always added at both opposing sides.
  # padding:
  #   x: 25
  #   y: 25

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: true

  # Window decorations
  #
  # Available values:
  # - full: borders and title bar
  # - none: neither borders nor title bar
  # - transparent: title bar, transparent background and title bar buttons
  # - buttonless: title bar, transparent background, but no title bar buttons
  decorations: none
  startup_mode: Fullscreen

scrolling:
  # maximum number of lines in the scrollback buffer. Specifying '0' will
  # disable scrolling.
  history: 20000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 2

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  # Style can be specified to pick a specific face.
  normal:
    family: "Hack Nerd Font Mono"
    style: "Regular"

  # The bold font face
  bold:
    family: "Hack Nerd Font Mono"

  # The italic font face
  italic:
    family: "Hack Nerd Font Mono"
    style: "Italic"

  # Point size of the font
  size: 14.0

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina you
  # probably want this set to false.
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: false

# Use custom cursor colors. If true, display the cursor in the cursor.foreground
# and cursor.background colors, otherwise invert the colors of the cursor.
custom_cursor_colors: true

colors:
  # Default colors
  primary:
    background: "0x2c2c2c"
    foreground: "0xd6d6d6"

    dim_foreground: "0xdbdbdb"
    bright_foreground: "0xd9d9d9"
    dim_background: "0x202020" # not sure
    bright_background: "0x3a3a3a" # not sure

  # Cursor colors
  cursor:
    text: "0x2c2c2c"
    cursor: "0xd9d9d9"

  # Normal colors
  normal:
    black: "0x1c1c1c"
    red: "0xbc5653"
    green: "0x909d63"
    yellow: "0xebc17a"
    blue: "0x7eaac7"
    magenta: "0xaa6292"
    cyan: "0x86d3ce"
    white: "0xcacaca"

  # Bright colors
  bright:
    black: "0x636363"
    red: "0xbc5653"
    green: "0x909d63"
    yellow: "0xebc17a"
    blue: "0x7eaac7"
    magenta: "0xaa6292"
    cyan: "0x86d3ce"
    white: "0xf7f7f7"

  # Dim colors
  dim:
    black: "0x232323"
    red: "0x74423f"
    green: "0x5e6547"
    yellow: "0x8b7653"
    blue: "0x556b79"
    magenta: "0x6e4962"
    cyan: "0x5c8482"
    white: "0x828282"

  indexed_colors: []

bell:
  animation: EaseOutExpo
  color: "0xffffff"
  duration: 0 # completely disabled

background_opacity: 1.0

key_bindings:
  - { key: V, mods: Command, action: Paste }
  - { key: C, mods: Command, action: Copy }

  - { key: Equals, mods: Command, action: IncreaseFontSize }
  - { key: Minus, mods: Command, action: DecreaseFontSize }

  - { key: Back, chars: "\x7f" }
  - { key: Back, mods: Alt, chars: "\x1b\x7f" }

  - { key: Insert, chars: "\x1b[2~" }
  - { key: Delete, chars: "\x1b[3~" }

  - { key: J, mods: Alt, chars: "\x1bj" }
  - { key: K, mods: Alt, chars: "\x1bk" }
  - { key: H, mods: Alt, chars: "\x1bh" }
  - { key: L, mods: Alt, chars: "\x1bl" }
  - { key: Q, mods: Alt, chars: "\x1bq" }

  - { key: D, mods: Command, chars: "\x01\x7c\x0a" }
  - { key: T, mods: Command, chars: "\x01\x63\x0a" }
  - { key: D, mods: Command|Shift, chars: "\x01\x5f\x0a" }
  - { key: W, mods: Command, chars: "\x01\x78\x0a" }
  - { key: W, mods: Command|Alt, chars: "\x01\x58\x0a" }
  - { key: LBracket, mods: Command, chars: "\x01\x5b\x0a" }
  - { key: RBracket, mods: Command, chars: "\x01\x5d\x0a" }
  - { key: Left, mods: Command|Alt, chars: "\x01\x1b\x5b\x44\x0a" }
  - { key: Right, mods: Command|Alt, chars: "\x01\x1b\x5b\x43\x0a" }
  - { key: Up, mods: Command|Alt, chars: "\x01\x1b\x5b\x41\x0a" }
  - { key: Down, mods: Command|Alt, chars: "\x01\x1b\x5b\x42\x0a" }
  - { key: Backslash, mods: Command|Shift, chars: "\x01\x5c\x0a" }
  - { key: Return, mods: Command|Shift, chars: "\x01\x2b\x0a" }
  - { key: LBracket, mods: Command|Shift, chars: "\x01\x3c\x0a" }
  - { key: RBracket, mods: Command|Shift, chars: "\x01\x3e\x0a" }
  - { key: Up, mods: Command|Control, chars: "\x01\x1b\x5b\x31\x3b\x35\x41" }
  - { key: Down, mods: Command|Control, chars: "\x01\x1b\x5b\x31\x3b\x35\x42" }
  - { key: Left, mods: Command|Control, chars: "\x01\x1b\x5b\x31\x3b\x35\x44" }
  - { key: Right, mods: Command|Control, chars: "\x01\x1b\x5b\x31\x3b\x35\x43" }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

# Mouse bindings
#
# Available fields:
# - mouse
# - action
# - mods (optional)
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# dynamic_title: false

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.
# shell:
# program: /usr/local/homebrew/bin/fish
# args:
#   - --command=tmux
shell:
  program: /usr/local/bin/zsh
  args:
    - -l
    - -c
    - "tmux attach || tmux new -s main"

debug:
  # Should display the render timer
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: None

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false
